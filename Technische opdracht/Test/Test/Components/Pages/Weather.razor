@page "/weather"
@using System.ComponentModel.DataAnnotations
@attribute [StreamRendering]
@inject NavigationManager NavigationManager


<PageTitle>Weather</PageTitle>

<h1>Weather</h1>

<p>This component demonstrates showing data.</p>

<EditForm EditContext="editContext" OnValidSubmit="NextStep" FormName="RegisterStep1">
    <DataAnnotationsValidator />

    <div class="mb-3">
        <label for="Username" class="form-label">Username</label>
        <InputText id="Username" class="form-control" @bind-Value="step1Model.Username" />
        <ValidationMessage For="@(() => step1Model.Username)" />
    </div>

    <div class="mb-3">
        <label for="Email" class="form-label">Email</label>
        <InputText id="Email" class="form-control" @bind-Value="step1Model.Email" />
        <ValidationMessage For="@(() => step1Model.Email)" />
    </div>

    <button type="submit" class="btn btn-primary">Next</button>
</EditForm>

@code {
    private EditContext? editContext;
    private ValidationMessageStore? messageStore;

    Step1Model step1Model = new Step1Model();

    protected override void OnInitialized()
    {
        // Initialize the EditContext for validation
        editContext = new EditContext(step1Model);

        // Initialize the ValidationMessageStore
        messageStore = new ValidationMessageStore(editContext);
    }

    private void NextStep()
    {
        // Proceed to next step
        NavigationManager.NavigateTo("/register/step2");
    }

    public class Step1Model
    {
        [Required(ErrorMessage = "Username is required.")]
        public string Username { get; set; }
        [Required(ErrorMessage = "Email is required.")]
        [EmailAddress(ErrorMessage = "Invalid email format.")]
        public string Email { get; set; }
    }
}
